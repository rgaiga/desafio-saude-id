services:
  api-gateway:
    build: ./services/api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
      SERVER_PORT: 3000
      BASE_PATH: /api/v1
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USERS_QUEUE: users_queue
      RABBITMQ_PRODUCTS_QUEUE: products_queue
      RABBITMQ_ORDERS_QUEUE: orders_queue
    depends_on:
      - rabbitmq
      - ms-users
      - ms-products
      - ms-orders

  ms-users:
    build: ./services/ms-users
    container_name: ms-users
    restart: always
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USERS_URL: users_queue
      RABBITMQ_ORDERS_QUEUE: orders_queue
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: users
    depends_on:
      - rabbitmq
      - postgres

  ms-products:
    build: ./services/ms-products
    container_name: ms-products
    restart: always
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_PRODUCTS_QUEUE: products_queue
      RABBITMQ_ORDERS_QUEUE: orders_queue
      RABBITMQ_STOCK_QUEUE: stock_queue
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: products
    depends_on:
      - rabbitmq
      - postgres

  ms-orders:
    build: ./services/ms-orders
    container_name: ms-orders
    restart: always
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_ORDERS_QUEUE: orders_queue
      RABBITMQ_STOCK_QUEUE: stock_queue
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: orders
    depends_on:
      - rabbitmq
      - postgres

  ms-stock-manager:
    build: ./services/ms-stock-manager
    container_name: ms-stock-manager
    restart: always
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_STOCK_QUEUE: stock_queue
      RABBITMQ_ORDERS_QUEUE: orders_queue
      RABBITMQ_PRODUCTS_QUEUE: products_queue
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
    depends_on:
      - rabbitmq
      - redis

  rabbitmq:
    image: rabbitmq:3.12.12-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  postgres:
    image: postgres:16.1-alpine
    container_name: postgres
    privileged: true
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init-users.sql:/docker-entrypoint-initdb.d/init-users.sql
      - ./sql/init-products.sql:/docker-entrypoint-initdb.d/init-products.sql
      - ./sql/init-orders.sql:/docker-entrypoint-initdb.d/init-orders.sql

  redis:
    image: redis/redis-stack:7.2.0-v8
    container_name: redis
    restart: always
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - redis-data:/data

volumes:
  rabbitmq-data:
  postgres-data:
  redis-data:
